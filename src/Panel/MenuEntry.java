package Panel;

import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import Config.Koneksi;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import com.raven.datechooser.SelectedDate;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.nio.file.Files;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTable;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author Rifal
 */
public class MenuEntry extends javax.swing.JPanel {

    private int halamanSaatIni = 1;
    private int dataPerHalaman = 20;
    private int totalHalaman;
    private int totalPages;
    private String tanggalEntri;
    private String bentukFisik;
   

    public MenuEntry() {
        initComponents();
txt_search.getDocument().addDocumentListener(new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent e) {
        searchData();
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        searchData();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        // Plain text components do not fire these events
    }
});
        setTabelModel();
       
        txtISBN.setEditable(false);
        txtJudulBuku.setEditable(false);
        txtNoInventaris.setEditable(false);
        txtLokasi.setEditable(false);
        txtTanggal.setEditable(false);
        txtWaktu.setEditable(false);
        Color headerColor = new Color(127, 140, 117);
        tblData.getTableHeader().setBackground(headerColor);
        loadData();
        paginationBuku();
        actionButton();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new com.raven.datechooser.DateChooser();
        timePicker1 = new com.raven.swing.TimePicker();
        PanelMain = new javax.swing.JPanel();
        PanelView = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lb_iconAnggota = new javax.swing.JLabel();
        lb_halaman = new javax.swing.JLabel();
        btn_first = new javax.swing.JButton();
        btn_before = new javax.swing.JButton();
        cbx_data = new javax.swing.JComboBox<>();
        btn_next = new javax.swing.JButton();
        btn_last = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnAdd = new rojerusan.RSMaterialButtonRectangle();
        btnDelete = new rojerusan.RSMaterialButtonRectangle();
        btnCancel = new rojerusan.RSMaterialButtonRectangle();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        PanelAdd = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lb_iconAnggota2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnSave = new rojerusan.RSMaterialButtonRectangle();
        btnCancel2 = new rojerusan.RSMaterialButtonRectangle();
        jLabel3 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtISBN = new javax.swing.JTextField();
        txtJudulBuku = new javax.swing.JTextField();
        btnOtherBuku = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        txtNoInventaris = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtLokasi = new javax.swing.JTextField();
        btnOtherInvent = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        txtTanggal = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtWaktu = new javax.swing.JTextField();
        btnWaktu = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        cbBentuk = new javax.swing.JComboBox<>();
        cbStatus = new javax.swing.JComboBox<>();

        dateChooser1.setTextRefernce(txtTanggal);

        timePicker1.setForeground(new java.awt.Color(196, 196, 140));
        timePicker1.set24hourMode(true);
        timePicker1.setDisplayText(txtWaktu);

        setLayout(new java.awt.CardLayout());

        PanelMain.setBackground(new java.awt.Color(255, 255, 255));
        PanelMain.setPreferredSize(new java.awt.Dimension(950, 590));
        PanelMain.setLayout(new java.awt.CardLayout());

        PanelView.setBackground(new java.awt.Color(255, 255, 255));
        PanelView.setPreferredSize(new java.awt.Dimension(950, 590));

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel9.setText("Entry Buku");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel10.setText("Daftar Entry Buku");

        lb_iconAnggota.setBackground(new java.awt.Color(250, 250, 250));
        lb_iconAnggota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon30/pngwing.com (39).png"))); // NOI18N

        lb_halaman.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_halaman.setText("Halaman of Total Halaman");

        btn_first.setText("First Page");

        btn_before.setText("<");

        cbx_data.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20", "40", "80" }));

        btn_next.setText(">");

        btn_last.setText("Last Page");

        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_searchKeyTyped(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_search_database_30px.png"))); // NOI18N

        btnAdd.setBackground(new java.awt.Color(80, 141, 105));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/13.png"))); // NOI18N
        btnAdd.setText("Tambah");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(190, 49, 68));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/13.png"))); // NOI18N
        btnDelete.setText("Hapus");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(153, 153, 153));
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/13.png"))); // NOI18N
        btnCancel.setText("Batal");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon30/Entry.png"))); // NOI18N

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblData.setShowGrid(true);
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblData);

        javax.swing.GroupLayout PanelViewLayout = new javax.swing.GroupLayout(PanelView);
        PanelView.setLayout(PanelViewLayout);
        PanelViewLayout.setHorizontalGroup(
            PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelViewLayout.createSequentialGroup()
                        .addComponent(lb_iconAnggota)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelViewLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 902, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelViewLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9))))
                    .addGroup(PanelViewLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(PanelViewLayout.createSequentialGroup()
                                .addComponent(btn_first)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_before)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbx_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_next)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_last))
                            .addComponent(lb_halaman, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelViewLayout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 646, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelViewLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2)))
                .addGap(14, 14, 14))
        );
        PanelViewLayout.setVerticalGroup(
            PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_iconAnggota)
                    .addGroup(PanelViewLayout.createSequentialGroup()
                        .addGroup(PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addComponent(jLabel10)))
                .addGroup(PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelViewLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelViewLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_halaman, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_first, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_before, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx_data, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_last, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        PanelMain.add(PanelView, "card2");

        PanelAdd.setBackground(new java.awt.Color(255, 255, 255));
        PanelAdd.setPreferredSize(new java.awt.Dimension(950, 590));

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel13.setText("Entry Buku Baru");

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel14.setText("Entry Buku Baru");

        lb_iconAnggota2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon30/pngwing.com (40).png"))); // NOI18N

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel15.setText("ID Buku");

        txtID.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtID.setForeground(new java.awt.Color(102, 102, 102));
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(80, 141, 105));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/13.png"))); // NOI18N
        btnSave.setText("Simpan");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel2.setBackground(new java.awt.Color(153, 153, 153));
        btnCancel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/13.png"))); // NOI18N
        btnCancel2.setText("Batal");
        btnCancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancel2ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/listpp.png"))); // NOI18N

        jLabel19.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel19.setText("ISBN");

        jLabel21.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel21.setText("Judul Buku");

        txtISBN.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtISBN.setForeground(new java.awt.Color(102, 102, 102));
        txtISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtISBNActionPerformed(evt);
            }
        });

        txtJudulBuku.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtJudulBuku.setForeground(new java.awt.Color(102, 102, 102));
        txtJudulBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJudulBukuActionPerformed(evt);
            }
        });

        btnOtherBuku.setBackground(new java.awt.Color(172, 196, 140));
        btnOtherBuku.setText("Select");
        btnOtherBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtherBukuActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel20.setText("Nomor Inventaris");

        txtNoInventaris.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNoInventaris.setForeground(new java.awt.Color(102, 102, 102));
        txtNoInventaris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoInventarisActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel22.setText("Lokasi");

        txtLokasi.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtLokasi.setForeground(new java.awt.Color(102, 102, 102));
        txtLokasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLokasiActionPerformed(evt);
            }
        });

        btnOtherInvent.setBackground(new java.awt.Color(172, 196, 140));
        btnOtherInvent.setText("Select");
        btnOtherInvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtherInventActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel23.setText("Tanggal Entri");

        txtTanggal.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtTanggal.setForeground(new java.awt.Color(102, 102, 102));
        txtTanggal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTanggalActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel24.setText("Waktu Entri");

        txtWaktu.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtWaktu.setForeground(new java.awt.Color(102, 102, 102));
        txtWaktu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWaktuActionPerformed(evt);
            }
        });

        btnWaktu.setBackground(new java.awt.Color(172, 196, 140));
        btnWaktu.setText("Choose");
        btnWaktu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWaktuActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel25.setText("Bentuk Fisik");

        jLabel26.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel26.setText("Status Ketersediaan");

        cbBentuk.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cbBentuk.setForeground(new java.awt.Color(102, 102, 102));
        cbBentuk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asli", "FotoCopy" }));

        cbStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbStatus.setForeground(new java.awt.Color(102, 102, 102));
        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tersedia", "Sedang Dipinjam", "Hilang" }));

        javax.swing.GroupLayout PanelAddLayout = new javax.swing.GroupLayout(PanelAdd);
        PanelAdd.setLayout(PanelAddLayout);
        PanelAddLayout.setHorizontalGroup(
            PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAddLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PanelAddLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAddLayout.createSequentialGroup()
                        .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel15))
                        .addGap(894, 894, 894))
                    .addGroup(PanelAddLayout.createSequentialGroup()
                        .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelAddLayout.createSequentialGroup()
                                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PanelAddLayout.createSequentialGroup()
                                        .addGap(112, 112, 112)
                                        .addComponent(jLabel14))
                                    .addComponent(lb_iconAnggota2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAddLayout.createSequentialGroup()
                                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbBentuk, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNoInventaris)
                                    .addComponent(txtTanggal)
                                    .addComponent(txtID)
                                    .addComponent(txtISBN)
                                    .addGroup(PanelAddLayout.createSequentialGroup()
                                        .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel23)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel25))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(22, 22, 22)
                                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtJudulBuku, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(PanelAddLayout.createSequentialGroup()
                                        .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(PanelAddLayout.createSequentialGroup()
                                                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(txtLokasi, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtWaktu, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btnOtherInvent, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(btnWaktu, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel24))
                                        .addGap(240, 240, 240)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(btnOtherBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        PanelAddLayout.setVerticalGroup(
            PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAddLayout.createSequentialGroup()
                        .addComponent(lb_iconAnggota2)
                        .addGap(34, 34, 34))
                    .addGroup(PanelAddLayout.createSequentialGroup()
                        .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJudulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOtherBuku))
                .addGap(18, 18, 18)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoInventaris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLokasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOtherInvent))
                .addGap(18, 18, 18)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtWaktu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnWaktu))
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbBentuk, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        PanelMain.add(PanelAdd, "card2");

        add(PanelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void txt_searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyTyped
        // TODO add your handling code here:
        searchData();
    }//GEN-LAST:event_txt_searchKeyTyped

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancel2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnCancel2ActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtISBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtISBNActionPerformed

    private void txtJudulBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJudulBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJudulBukuActionPerformed

    private void btnOtherBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtherBukuActionPerformed

        Dialog_DataBuku dialogDataBuku = new Dialog_DataBuku(new javax.swing.JFrame(), true);
        dialogDataBuku.setVisible(true);

        if (dialogDataBuku.isbukuSelected()) {

            String selectedISBN = dialogDataBuku.getselectedISBNBuku();
            String selectedisbnBuku = dialogDataBuku.getselectedjudulBuku();
            txtISBN.setText(selectedISBN);
            txtJudulBuku.setText(selectedisbnBuku);

        }
    }//GEN-LAST:event_btnOtherBukuActionPerformed

    private void txtNoInventarisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoInventarisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoInventarisActionPerformed

    private void txtLokasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLokasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLokasiActionPerformed

    private void btnOtherInventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtherInventActionPerformed
        Dialog_DataInventaris dialogDataInvent = new Dialog_DataInventaris(new javax.swing.JFrame(), true);
        dialogDataInvent.setVisible(true);

        if (dialogDataInvent.isinventarisSelected()) {

            String selectednoInvent = dialogDataInvent.getselectednoInventaris();
            String selectedLokasi = dialogDataInvent.getselectedLokasi();
            txtNoInventaris.setText(selectednoInvent);
            txtLokasi.setText(selectedLokasi);

        }
    }//GEN-LAST:event_btnOtherInventActionPerformed

    private void txtTanggalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTanggalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTanggalActionPerformed

    private void txtWaktuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWaktuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWaktuActionPerformed

    private void btnWaktuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWaktuActionPerformed
        timePicker1.showPopup(this, 100, 100);
    }//GEN-LAST:event_btnWaktuActionPerformed

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked

        if (btnAdd.getText().equals("Tambah")) {
            btnAdd.setText("Ubah");
            btnDelete.setVisible(true);
            btnCancel.setVisible(true);
        }
    }//GEN-LAST:event_tblDataMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelAdd;
    private javax.swing.JPanel PanelMain;
    private javax.swing.JPanel PanelView;
    private rojerusan.RSMaterialButtonRectangle btnAdd;
    private rojerusan.RSMaterialButtonRectangle btnCancel;
    private rojerusan.RSMaterialButtonRectangle btnCancel2;
    private rojerusan.RSMaterialButtonRectangle btnDelete;
    private javax.swing.JButton btnOtherBuku;
    private javax.swing.JButton btnOtherInvent;
    private rojerusan.RSMaterialButtonRectangle btnSave;
    private javax.swing.JButton btnWaktu;
    private javax.swing.JButton btn_before;
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_last;
    private javax.swing.JButton btn_next;
    private javax.swing.JComboBox<String> cbBentuk;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JComboBox<String> cbx_data;
    private com.raven.datechooser.DateChooser dateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lb_halaman;
    private javax.swing.JLabel lb_iconAnggota;
    private javax.swing.JLabel lb_iconAnggota2;
    private javax.swing.JTable tblData;
    private com.raven.swing.TimePicker timePicker1;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtJudulBuku;
    private javax.swing.JTextField txtLokasi;
    private javax.swing.JTextField txtNoInventaris;
    private javax.swing.JTextField txtTanggal;
    private javax.swing.JTextField txtWaktu;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables

    private void autoResizeAllColumns() {
        int columns = tblData.getColumnCount();
        for (int i = 0; i < columns; i++) {
            TableColumn column = tblData.getColumnModel().getColumn(i);
            int width = (int) tblData.getTableHeader().getDefaultRenderer()
                    .getTableCellRendererComponent(tblData, column.getHeaderValue(), false, false, -1, i)
                    .getPreferredSize().getWidth();
            for (int row = 0; row < tblData.getRowCount(); row++) {
                int preferedWidth = (int) tblData.getCellRenderer(row, i)
                        .getTableCellRendererComponent(tblData, tblData.getValueAt(row, i), false, false, row, i)
                        .getPreferredSize().getWidth();
                width = Math.max(width, preferedWidth);
            }
            column.setPreferredWidth(width);
        }
    }

    private void paginationBuku() {
        btn_first.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                halamanSaatIni = 1;
                loadData();
            }

        });
        btn_before.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (halamanSaatIni > 1) {
                    halamanSaatIni--;
                    loadData();
                }
            }
        });
        cbx_data.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dataPerHalaman = Integer.parseInt(cbx_data.getSelectedItem().toString());
                halamanSaatIni = 1;
                loadData();
            }
        });
        btn_next.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (halamanSaatIni < totalPages) {
                    halamanSaatIni++;
                    loadData();
                }
            }
        });
        btn_last.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                halamanSaatIni = totalPages;
                loadData();
            }
        });
    }

    private void actionButton() {
        btnAdd.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                PanelMain.removeAll();
                PanelMain.add(PanelAdd);
                PanelMain.repaint();
                PanelMain.revalidate();
                txtID.setText(setIDBuku());

                if (btnAdd.getText().equals("Ubah")) {
                    dataTabel();
                    btnSave.setText("Perbarui");
                }

            }

        });
        btnSave.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (btnSave.getText().equals("Tambah")) {
                    btnSave.setText("Simpan");
                } else if (btnSave.getText().equals("Simpan")) {
                    insertData();
                } else if (btnSave.getText().equals("Perbarui")) {
                    updateData();
                }

            }

        });
        btnDelete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleteData();
            }

        });
        btnCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                showPanel();
                loadData();
            }

        });
        btnCancel2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                showPanel();
                loadData();
            }

        });
    }

    private void calculateTotalPages() {
        int totalData = getTotalData();
        totalPages = (int) Math.ceil((double) totalData / dataPerHalaman);
    }

    private int getTotalData() {
        int totalData = 0;
       try (Connection conn = Koneksi.getConnection()) {
            String sql = "SELECT COUNT(*) AS total from Entry";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                ResultSet rs = st.executeQuery();
                if (rs.next()) {
                    totalData = rs.getInt("total");

                }

            }

        } catch (Exception e) {
            Logger.getLogger(MenuEntry.class.getName()).log(Level.SEVERE, null, e);
        }
        return totalData;
    }

    private void loadData() {

        calculateTotalPages();
        int totalData = getTotalData();
        lb_halaman.setText(String.valueOf("Halaman " + halamanSaatIni + " dari Total Data " + totalData));

        int startIndex = (halamanSaatIni - 1) * dataPerHalaman;
        getData(startIndex, dataPerHalaman, (DefaultTableModel) tblData.getModel());

        btnDelete.setVisible(false);
        btnCancel.setVisible(false);
    }

    private void showPanel() {
        PanelMain.removeAll();
        PanelMain.add(new MenuEntry());
        PanelMain.repaint();
        PanelMain.revalidate();
    }

    private void resetForm() {
        txtID.setText("");
        txtISBN.setText("");
        txtJudulBuku.setText("");
        txtLokasi.setText("");
        txtNoInventaris.setText("");
        txtTanggal.setText("");
        txtWaktu.setText("");

    }

    private void setTabelModel() {
         DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
             return false;
        }
    };
        model.addColumn("ID Buku");
        model.addColumn("ISBN");
        model.addColumn("Judul Buku");
        model.addColumn("No Inventaris");
        model.addColumn("Lokasi");
        model.addColumn("Tanggal Entri");
        model.addColumn("Waktu Entri");
        model.addColumn("Bentuk Fisik");
        model.addColumn("Status Ketersediaan");
        tblData.setModel(model);
        autoResizeAllColumns();
tblData.setAutoCreateRowSorter(true);
 tblData.getTableHeader().setReorderingAllowed(false);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

        for (int i = 0; i < tblData.getColumnCount(); i++) {
            tblData.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
             tblData.setDefaultEditor(Object.class, null);
        }
    }

    private void getData(int startIndex, int entriesPage, DefaultTableModel model) {
        model.setRowCount(0);

       try (Connection conn = Koneksi.getConnection()) {
            String sql = "SELECT \n"
                    + "    entry.ID_BUKU, \n"
                    + "    entry.ISBN, \n"
                    + "    buku.JUDUL_BUKU, \n"
                    + "    entry.NO_INVENTARIS, \n"
                    + "    inventaris.LOKASI, \n"
                    + "    entry.TANGGAL_ENTRI, \n"
                    + "    entry.WAKTU_ENTRI, \n"
                    + "    entry.BENTUK_FISIK, \n"
                    + "    entry.STATUS_KETERSEDIAAN\n"
                    + "FROM \n"
                    + "    entry\n"
                    + "JOIN \n"
                    + "    buku ON entry.ISBN = buku.ISBN\n"
                    + "JOIN \n"
                    + "    inventaris ON entry.NO_INVENTARIS = inventaris.NO_INVENTARIS\n"
                    + "ORDER BY \n"
                    + "    entry.ID_BUKU ASC LIMIT ?,?";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setInt(1, startIndex);
                st.setInt(2, entriesPage);

                ResultSet rs = st.executeQuery();

                while (rs.next()) {
                    String idBuku = rs.getString("ID_Buku");
                    String isbnBuku = rs.getString("ISBN");
                    String judulBuku = rs.getString("Judul_Buku");
                    String noInventaris = rs.getString("No_Inventaris");
                    String Lokasi = rs.getString("Lokasi");
                    String tanggalEntri = rs.getString("Tanggal_Entri");
                    String waktuEntri = rs.getString("Waktu_Entri");
                    String bentukFisik = rs.getString("Bentuk_Fisik");
                    String statusKetersediaan = rs.getString("Status_Ketersediaan");

                    Object[] rowData = {idBuku, isbnBuku, judulBuku, noInventaris, Lokasi, tanggalEntri, waktuEntri, bentukFisik, statusKetersediaan};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(MenuEntry.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private String setIDBuku() {
    String urutan = null;
    Date now = new Date();
    SimpleDateFormat noFormat = new SimpleDateFormat("yyMM");
    txtID.setEnabled(false);
    String sql = "SELECT RIGHT(ID_Buku, 4) AS Nomor "
            + "FROM entry "
            + "WHERE ID_Buku LIKE 'BKU" + noFormat.format(now) + "%' "
            + "ORDER BY ID_Buku DESC "
            + "LIMIT 1";

    try (Connection conn = Koneksi.getConnection();
         PreparedStatement st = conn.prepareStatement(sql);
         ResultSet rs = st.executeQuery()) {

        if (rs.next()) {
            int nomor = Integer.parseInt(rs.getString("Nomor")) + 1;
            urutan = "BKU" + noFormat.format(now) + String.format("%04d", nomor);
        } else {
            urutan = "BKU" + noFormat.format(now) + "001";
        }

    } catch (SQLException e) {
        Logger.getLogger(MenuEntry.class.getName()).log(Level.SEVERE, null, e);
    }

    return urutan;
}


    private void insertData() {
        String idBuku = txtID.getText();
        String isbnBuku = txtISBN.getText();
        String noInventaris = txtNoInventaris.getText();
        String tanggalEntri = txtTanggal.getText();
        String waktuEntri = txtWaktu.getText();
        String bentukFisik = cbBentuk.getSelectedItem().toString();
        String status = cbStatus.getSelectedItem().toString();

        if (idBuku.isEmpty() || isbnBuku.isEmpty() || noInventaris.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {

            if (tanggalEntri.isEmpty() || waktuEntri.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tanggal dan waktu harus diisi!", "Validasi", JOptionPane.ERROR_MESSAGE);
                return;
            }

             try (Connection conn = Koneksi.getConnection()) {
                String sql = "INSERT INTO entry (ID_Buku, ISBN, NO_INVENTARIS, TANGGAL_ENTRI, Waktu_ENTRI, BENTUK_FISIK, STATUS_KETERSEDIAAN) VALUES (?,?,?,?,?,?,?)";
                try (PreparedStatement st = conn.prepareStatement(sql)) {
                    st.setString(1, idBuku);
                    st.setString(2, isbnBuku);
                    st.setString(3, noInventaris);
                    st.setString(4, tanggalEntri);
                    st.setString(5, waktuEntri);
                    st.setString(6, bentukFisik);
                    st.setString(7, status);

                    int rowInserted = st.executeUpdate();
                    if (rowInserted > 0) {
                        JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan");
                        resetForm();
                        loadData();
                        showPanel();
                    }
                }
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(this, "Format tanggal atau waktu tidak valid!", "Validasi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            Logger.getLogger(MenuEntry.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void updateData() {
        String idBuku = txtID.getText();
        String isbnBuku = txtISBN.getText();
        String noInventaris = txtNoInventaris.getText();
        String tanggalEntri = txtTanggal.getText();
        String waktuEntri = txtWaktu.getText();
        String bentukFisik = cbBentuk.getSelectedItem().toString();
        String status = cbStatus.getSelectedItem().toString();

        if (idBuku.isEmpty() || isbnBuku.isEmpty() || noInventaris.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (Connection conn = Koneksi.getConnection()) {
            
            String sql = "UPDATE entry SET ISBN=?, NO_INVENTARIS=?, TANGGAL_ENTRI=?,WAKTU_ENTRI=?, BENTUK_FISIK=?, STATUS_KETERSEDIAAN=? WHERE ID_BUKU=?";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, isbnBuku);
                st.setString(2, noInventaris);
                st.setString(3, tanggalEntri);
                st.setString(4, waktuEntri);
                st.setString(5, bentukFisik);
                st.setString(6, status);
                st.setString(7, idBuku);

                int rowUpdated = st.executeUpdate();
                if (rowUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil Diperbarui");
                    resetForm();
                    loadData();
                    showPanel();
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(MenuEntry.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void dataTabel() {
        PanelView.setVisible(false);
        PanelAdd.setVisible(true);

        int row = tblData.getSelectedRow();
        jLabel14.setText("Perbarui Entry Buku");

   
        String id = tblData.getModel().getValueAt(row, 0).toString();

        txtID.setText(tblData.getValueAt(row, 0).toString());
        txtISBN.setText(tblData.getValueAt(row, 1).toString());
        txtJudulBuku.setText(tblData.getValueAt(row, 2).toString());
        txtNoInventaris.setText(tblData.getValueAt(row, 3).toString());
        txtLokasi.setText(tblData.getValueAt(row, 4).toString());
        txtTanggal.setText(tblData.getValueAt(row, 5).toString());
        txtWaktu.setText(tblData.getValueAt(row, 6).toString());
        cbBentuk.setSelectedItem(tblData.getValueAt(row, 7).toString());
        cbStatus.setSelectedItem(tblData.getValueAt(row, 8).toString());
    }

    private void deleteData() {
        int selectedRow = tblData.getSelectedRow();
        int confirm = JOptionPane.showConfirmDialog(this,
                "Apakah anda yakin menghapus data ini ?",
                "Konfirmasi Hapus Data",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            String id = tblData.getValueAt(selectedRow, 0).toString();
            try (Connection conn = Koneksi.getConnection()) {
                String sql = "DELETE FROM entry WHERE ID_Buku=?";
                try (PreparedStatement st = conn.prepareStatement(sql)) {
                    st.setString(1, id);
                    int rowDeleted = st.executeUpdate();

                    if (rowDeleted > 0) {
                        JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                    } else {
                        JOptionPane.showMessageDialog(this, "Data Gagal Dihapus");
                    }
                }
            } catch (Exception e) {
                Logger.getLogger(MenuEntry.class.getName()).log(Level.SEVERE, null, e);
            }
        }

        resetForm();
        loadData();
        showPanel();
    }

   private void searchData() {
    String kataKunci = txt_search.getText();
    DefaultTableModel model = (DefaultTableModel) tblData.getModel();
    model.setRowCount(0);

    try (Connection conn = Koneksi.getConnection()) {
        String sql = "SELECT \n" +
"    entry.ID_BUKU, \n" +
"    entry.ISBN, \n" +
"    buku.JUDUL_BUKU, \n" +
"    entry.NO_INVENTARIS, \n" +
"    inventaris.LOKASI, \n" +
"    entry.TANGGAL_ENTRI, \n" +
"    entry.WAKTU_ENTRI, \n" +
"    entry.BENTUK_FISIK, \n" +
"    entry.STATUS_KETERSEDIAAN \n" +
"FROM \n" +
"    entry \n" +
"JOIN \n" +
"    buku ON entry.ISBN = buku.ISBN \n" +
"JOIN \n" +
"    inventaris ON entry.NO_INVENTARIS = inventaris.NO_INVENTARIS \n" +
"WHERE \n" +
"    entry.ID_BUKU LIKE ? OR entry.ISBN LIKE ? OR buku.JUDUL_BUKU LIKE ?";
        try (PreparedStatement st = conn.prepareStatement(sql)) {
            st.setString(1, "%" + kataKunci + "%");
            st.setString(2, "%" + kataKunci + "%");
            st.setString(3, "%" + kataKunci + "%");
            try (ResultSet rs = st.executeQuery()) {
                while (rs.next()) {
                    String idBuku = rs.getString("ID_BUKU");
                    String isbnBuku = rs.getString("ISBN");
                    String judulBuku = rs.getString("JUDUL_BUKU");
                    String noInventaris = rs.getString("NO_INVENTARIS");
                    String lokasi = rs.getString("LOKASI");
                    String tanggalEntri = rs.getString("TANGGAL_ENTRI");
                    String waktuEntri = rs.getString("WAKTU_ENTRI");
                    String bentukFisik = rs.getString("BENTUK_FISIK");
                    String statusKetersediaan = rs.getString("STATUS_KETERSEDIAAN");

                    Object[] rowData = {idBuku, isbnBuku, judulBuku, noInventaris, lokasi, tanggalEntri, waktuEntri, bentukFisik, statusKetersediaan};
                    model.addRow(rowData);
                }
            }
        }
    } catch (SQLException e) {
        Logger.getLogger(MenuEntry.class.getName()).log(Level.SEVERE, null, e);
    }
}



}
