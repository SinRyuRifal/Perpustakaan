package Panel;

import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import Config.Koneksi;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import com.raven.datechooser.SelectedDate;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.nio.file.Files;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import java.awt.Color;
import java.text.ParseException;
import main.FormLogin;

/**
 *
 * @author Rifal
 */
public class MenuPeminjaman extends javax.swing.JPanel {

    private DefaultTableModel keranjangTableModel;
    private int halamanSaatIni = 1;
    private int dataPerHalaman = 20;
    private int totalHalaman;
    private int totalPages;
    private String idKategori;
    private String idPenerbit;
private String loggedInUsername; 
private FormLogin formLogin;

    public MenuPeminjaman() {
        initComponents();
        formLogin = new FormLogin();
       loggedInUsername = FormLogin.GlobalVariables.loggedInUsername;
        formLogin.setLoggedInUsername(loggedInUsername);
        txtIDPenjaga.setText(loggedInUsername);
  String namaPenjaga = formLogin.getNamaPenjaga();
        txtNamaJaga.setText(namaPenjaga);
     txtID.setText(setIDPinjam());
        Color headerColor = new Color(127, 140, 117);
        txtDetail.setVisible(false);
        jLabel30.setVisible(false);
        txtID.setEditable(false);
        txtDetail.setEditable(false);
        txtIDPenjaga.setEditable(false);
        txtISBN.setEditable(false);
        txtJudul.setEditable(false);
        txtNISN.setEditable(false);
        txtNamaJaga.setEditable(false);
        txtNamaSantri.setEditable(false);
        txtTglKembali.setEditable(false);
        txtUnit.setEditable(false);
        KeranjangTableModel();

        txtID.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateKodeDetail();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateKodeDetail();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });
        txtUnit.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateKodeDetail();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateKodeDetail();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
               
            }
        });
        txtISBN.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateImage();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateImage();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
               
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendarPinjam = new com.raven.datechooser.DateChooser();
        calendarKembali = new com.raven.datechooser.DateChooser();
        PanelMain = new javax.swing.JPanel();
        PanelAdd = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnPinjam = new rojerusan.RSMaterialButtonRectangle();
        jLabel3 = new javax.swing.JLabel();
        lbGambar = new javax.swing.JLabel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel15 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtTglPinjam = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtTglKembali = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        lbTotalPinjam = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtIDPenjaga = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtNISN = new javax.swing.JTextField();
        btnOtherSantri = new javax.swing.JButton();
        txtNamaJaga = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtNamaSantri = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtISBN = new javax.swing.JTextField();
        btnOtherJudul = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        txtJudul = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtUnit = new javax.swing.JTextField();
        btnOtherUnit = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKeranjang = new javax.swing.JTable();
        btn_hapusKeranjang = new keeptoo.KButton();
        btn_addKeranjang = new keeptoo.KButton();
        jLabel30 = new javax.swing.JLabel();
        txtDetail = new javax.swing.JTextField();

        calendarPinjam.setTextRefernce(txtTglPinjam);

        calendarKembali.setTextRefernce(txtTglKembali);

        setLayout(new java.awt.CardLayout());

        PanelMain.setBackground(new java.awt.Color(255, 255, 255));
        PanelMain.setPreferredSize(new java.awt.Dimension(950, 590));
        PanelMain.setLayout(new java.awt.CardLayout());

        PanelAdd.setBackground(new java.awt.Color(255, 255, 255));
        PanelAdd.setPreferredSize(new java.awt.Dimension(950, 590));
        PanelAdd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel13.setText("Input Peminjaman");
        PanelAdd.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 10, -1, -1));

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/—Pngtree—books in the library_3760888 (1).png"))); // NOI18N
        PanelAdd.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 120, -1));

        btnPinjam.setBackground(new java.awt.Color(80, 141, 105));
        btnPinjam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/13.png"))); // NOI18N
        btnPinjam.setText("Pinjam");
        btnPinjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPinjamActionPerformed(evt);
            }
        });
        PanelAdd.add(btnPinjam, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 108, 45));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pinjam.png"))); // NOI18N
        PanelAdd.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 10, -1, 24));

        lbGambar.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lbGambar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbGambar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon30/icons8_Book_120px_5.png"))); // NOI18N
        lbGambar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PanelAdd.add(lbGambar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 240, 160, 190));

        kGradientPanel1.setkEndColor(new java.awt.Color(243, 238, 234));
        kGradientPanel1.setkStartColor(new java.awt.Color(235, 227, 213));

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel15.setText("ID Peminjaman");

        txtID.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtID.setForeground(new java.awt.Color(102, 102, 102));
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel17.setText("Tanggal Pinjam");

        txtTglPinjam.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtTglPinjam.setForeground(new java.awt.Color(102, 102, 102));
        txtTglPinjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTglPinjamActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel18.setText("Tanggal Tenggat");

        txtTglKembali.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtTglKembali.setForeground(new java.awt.Color(102, 102, 102));
        txtTglKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTglKembaliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTglPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTglKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(187, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(txtTglKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(txtTglPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)))
                .addContainerGap())
        );

        PanelAdd.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 1260, 52));

        jLabel19.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel19.setText("Tambah Peminjaman");
        PanelAdd.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 54, -1, -1));

        lbTotalPinjam.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lbTotalPinjam.setText("0");
        PanelAdd.add(lbTotalPinjam, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 450, -1, 20));

        jLabel21.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel21.setText("ID Penjaga");
        PanelAdd.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        txtIDPenjaga.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtIDPenjaga.setForeground(new java.awt.Color(102, 102, 102));
        txtIDPenjaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDPenjagaActionPerformed(evt);
            }
        });
        PanelAdd.add(txtIDPenjaga, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 240, -1));

        jLabel22.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel22.setText("NISN");
        PanelAdd.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        txtNISN.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNISN.setForeground(new java.awt.Color(102, 102, 102));
        txtNISN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNISNActionPerformed(evt);
            }
        });
        PanelAdd.add(txtNISN, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 350, 200, -1));

        btnOtherSantri.setBackground(new java.awt.Color(172, 196, 140));
        btnOtherSantri.setText("...");
        btnOtherSantri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtherSantriActionPerformed(evt);
            }
        });
        PanelAdd.add(btnOtherSantri, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, -1, -1));

        txtNamaJaga.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNamaJaga.setForeground(new java.awt.Color(102, 102, 102));
        txtNamaJaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaJagaActionPerformed(evt);
            }
        });
        PanelAdd.add(txtNamaJaga, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 240, -1));

        jLabel23.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel23.setText("Nama Penjaga");
        PanelAdd.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        jLabel24.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel24.setText("Nama Santri");
        PanelAdd.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        txtNamaSantri.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtNamaSantri.setForeground(new java.awt.Color(102, 102, 102));
        txtNamaSantri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaSantriActionPerformed(evt);
            }
        });
        PanelAdd.add(txtNamaSantri, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 400, 240, -1));

        jLabel25.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel25.setText("ISBN");
        PanelAdd.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, -1, -1));

        txtISBN.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtISBN.setForeground(new java.awt.Color(102, 102, 102));
        txtISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtISBNActionPerformed(evt);
            }
        });
        PanelAdd.add(txtISBN, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 250, 240, -1));

        btnOtherJudul.setBackground(new java.awt.Color(172, 196, 140));
        btnOtherJudul.setText("...");
        btnOtherJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtherJudulActionPerformed(evt);
            }
        });
        PanelAdd.add(btnOtherJudul, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 250, -1, -1));

        jLabel26.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel26.setText("Judul Buku");
        PanelAdd.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 300, -1, -1));

        txtJudul.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtJudul.setForeground(new java.awt.Color(102, 102, 102));
        txtJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJudulActionPerformed(evt);
            }
        });
        PanelAdd.add(txtJudul, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 300, 470, -1));

        jLabel27.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel27.setText("Total Pinjam");
        PanelAdd.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 450, -1, 20));

        txtUnit.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtUnit.setForeground(new java.awt.Color(102, 102, 102));
        txtUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitActionPerformed(evt);
            }
        });
        PanelAdd.add(txtUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, 240, -1));

        btnOtherUnit.setBackground(new java.awt.Color(172, 196, 140));
        btnOtherUnit.setText("...");
        btnOtherUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtherUnitActionPerformed(evt);
            }
        });
        PanelAdd.add(btnOtherUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 350, -1, -1));

        jLabel29.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel29.setText("Pilih Unit");
        PanelAdd.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, -1, -1));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Keranjang Pinjam"));

        tblKeranjang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKeranjang);

        PanelAdd.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 1250, 230));

        btn_hapusKeranjang.setText("Hapus");
        btn_hapusKeranjang.setkBackGroundColor(new java.awt.Color(51, 0, 204));
        btn_hapusKeranjang.setkBorderRadius(20);
        btn_hapusKeranjang.setkEndColor(new java.awt.Color(102, 51, 255));
        btn_hapusKeranjang.setkHoverEndColor(new java.awt.Color(153, 102, 255));
        btn_hapusKeranjang.setkHoverForeGround(new java.awt.Color(153, 153, 255));
        btn_hapusKeranjang.setkHoverStartColor(new java.awt.Color(102, 102, 255));
        btn_hapusKeranjang.setkSelectedColor(new java.awt.Color(255, 153, 255));
        btn_hapusKeranjang.setkStartColor(new java.awt.Color(255, 51, 51));
        btn_hapusKeranjang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusKeranjangActionPerformed(evt);
            }
        });
        PanelAdd.add(btn_hapusKeranjang, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 470, 100, 30));

        btn_addKeranjang.setText("Add");
        btn_addKeranjang.setkBackGroundColor(new java.awt.Color(51, 0, 204));
        btn_addKeranjang.setkBorderRadius(20);
        btn_addKeranjang.setkEndColor(new java.awt.Color(102, 51, 255));
        btn_addKeranjang.setkHoverEndColor(new java.awt.Color(153, 102, 255));
        btn_addKeranjang.setkHoverForeGround(new java.awt.Color(153, 153, 255));
        btn_addKeranjang.setkHoverStartColor(new java.awt.Color(102, 102, 255));
        btn_addKeranjang.setkSelectedColor(new java.awt.Color(255, 153, 255));
        btn_addKeranjang.setkStartColor(new java.awt.Color(0, 204, 204));
        btn_addKeranjang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addKeranjangActionPerformed(evt);
            }
        });
        PanelAdd.add(btn_addKeranjang, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 100, 30));

        jLabel30.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel30.setText("ID Detail");
        PanelAdd.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 400, -1, -1));

        txtDetail.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtDetail.setForeground(new java.awt.Color(102, 102, 102));
        txtDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDetailActionPerformed(evt);
            }
        });
        PanelAdd.add(txtDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, 270, -1));

        PanelMain.add(PanelAdd, "card2");

        add(PanelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtIDActionPerformed

    private void btnPinjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPinjamActionPerformed

        Connection conn = null;

        try {
            conn = Koneksi.getConnection();
            conn.setAutoCommit(false); 
            
            String idPeminjaman = txtID.getText();
            String idPenjaga = txtIDPenjaga.getText();
            String nisn = txtNISN.getText();
            String tanggalPinjam = txtTglPinjam.getText();
            String tanggalKembali = txtTglKembali.getText();
            String jumlahPinjam = lbTotalPinjam.getText();

            String statusPeminjaman = "Sedang Berlangsung";

     if (!isValidDateOrder(tanggalPinjam, tanggalKembali)) {
            JOptionPane.showMessageDialog(this, "Tanggal Kembali harus setelah Tanggal Pinjam dan tidak boleh sama hari.");
            return; 
        }
            int currentLoans = getCurrentLoansForNISN(conn, nisn);
            if (currentLoans >= 3) {
                JOptionPane.showMessageDialog(this, "Batas maksimal peminjaman telah tercapai! Kembalikan dulu bukunya");
                return;
            }
         
            String insertPeminjamanSql = "INSERT INTO PEMINJAMAN (ID_PEMINJAMAN, ID_PENJAGA, NISN, TANGGAL_PEMINJAMAN, TANGGAL_PENGEMBALIAN, STATUS_PEMINJAMAN, JUMLAH_PINJAMAN) VALUES (?, ?, ?, ?, ?, ?, ?)";
            try (PreparedStatement pstPeminjaman = conn.prepareStatement(insertPeminjamanSql)) {
                pstPeminjaman.setString(1, idPeminjaman);
                pstPeminjaman.setString(2, idPenjaga);
                pstPeminjaman.setString(3, nisn);
                pstPeminjaman.setString(4, tanggalPinjam);
                pstPeminjaman.setString(5, tanggalKembali);
                pstPeminjaman.setString(6, statusPeminjaman);
                pstPeminjaman.setInt(7, Integer.parseInt(jumlahPinjam));

                pstPeminjaman.executeUpdate();
            }

           
            String statusPengembalian = "Sedang Dipinjam";

           
            for (int row = 0; row < keranjangTableModel.getRowCount(); row++) {
                String idDetailPeminjaman = (String) keranjangTableModel.getValueAt(row, 0);
                String idBuku = (String) keranjangTableModel.getValueAt(row, 2);

                String insertDetailPeminjamanSql = "INSERT INTO DETAIL_PEMINJAMAN (ID_DETAIL_PEMINJAMAN, ID_BUKU, ID_PEMINJAMAN, STATUS_PENGEMBALIAN) VALUES (?, ?, ?, ?)";
                try (PreparedStatement pstDetailPeminjaman = conn.prepareStatement(insertDetailPeminjamanSql)) {
                    pstDetailPeminjaman.setString(1, idDetailPeminjaman);
                    pstDetailPeminjaman.setString(2, idBuku);
                    pstDetailPeminjaman.setString(3, idPeminjaman);
                    pstDetailPeminjaman.setString(4, statusPengembalian);

                    pstDetailPeminjaman.executeUpdate();
                }

               
                String updateEntriBukuSql = "UPDATE ENTRY SET STATUS_KETERSEDIAAN = ? WHERE ID_BUKU = ?";
                try (PreparedStatement pstEntriBuku = conn.prepareStatement(updateEntriBukuSql)) {
                    pstEntriBuku.setString(1, statusPengembalian);
                    pstEntriBuku.setString(2, idBuku);

                    pstEntriBuku.executeUpdate();
                }
            }

            conn.commit(); 
            JOptionPane.showMessageDialog(this, "Peminjaman berhasil!");
            clearForm();
             txtID.setText(setIDPinjam());
        } catch (SQLException ex) {
            try {
                if (conn != null) {
                    conn.rollback(); 
                }
            } catch (SQLException rollbackEx) {
               
                rollbackEx.printStackTrace();
            } finally {
                closeConnection(conn);
            }

            Logger.getLogger(MenuPeminjaman.class.getName()).log(Level.SEVERE, "Error during peminjaman process!", ex);
            JOptionPane.showMessageDialog(this, "Error during peminjaman process!");
        } finally {
            closeConnection(conn);
        }


    }//GEN-LAST:event_btnPinjamActionPerformed

    private void txtTglPinjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTglPinjamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTglPinjamActionPerformed

    private void txtTglKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTglKembaliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTglKembaliActionPerformed

    private void txtIDPenjagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDPenjagaActionPerformed

    }//GEN-LAST:event_txtIDPenjagaActionPerformed

    private void txtNISNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNISNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNISNActionPerformed

    private void btnOtherSantriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtherSantriActionPerformed
        Dialog_DataSantri dialogDataSantri = new Dialog_DataSantri(new javax.swing.JFrame(), true);
        dialogDataSantri.setVisible(true);

        if (dialogDataSantri.issantriSelected()) {

            String selectedNISN = dialogDataSantri.getselectedNISNSantri();
            String selectednamaSantri = dialogDataSantri.getselectednamaSantri();
            txtNISN.setText(selectedNISN);
            txtNamaSantri.setText(selectednamaSantri);

        }
    }//GEN-LAST:event_btnOtherSantriActionPerformed

    private void txtNamaJagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaJagaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaJagaActionPerformed

    private void txtNamaSantriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaSantriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaSantriActionPerformed

    private void txtISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtISBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtISBNActionPerformed

    private void btnOtherJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtherJudulActionPerformed
        Dialog_DataBuku dialogDataBuku = new Dialog_DataBuku(new javax.swing.JFrame(), true);
        dialogDataBuku.setVisible(true);

        if (dialogDataBuku.isbukuSelected()) {

            String selectedISBN = dialogDataBuku.getselectedISBNBuku();
            String selectedJudul = dialogDataBuku.getselectedjudulBuku();
            txtISBN.setText(selectedISBN);
            txtJudul.setText(selectedJudul);

        }
    }//GEN-LAST:event_btnOtherJudulActionPerformed

    private void txtUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnitActionPerformed

    private void btnOtherUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtherUnitActionPerformed
        String ISBN = txtISBN.getText();

        if (!ISBN.isEmpty()) {

            Dialog_DataUnit dialogDataUnit = new Dialog_DataUnit(new javax.swing.JFrame(), true);

            dialogDataUnit.loadUnitbyISBN(ISBN);

            dialogDataUnit.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosed(java.awt.event.WindowEvent windowEvent) {

                    if (dialogDataUnit.isunitSelected()) {

                        String selectedIdBuku = dialogDataUnit.getselectedidBuku();

                        txtUnit.setText(selectedIdBuku);
                        ;
                    }
                }
            });
            dialogDataUnit.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Masukkan ISBN terlebih dahulu.");
        }
    }//GEN-LAST:event_btnOtherUnitActionPerformed

    private void btn_hapusKeranjangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusKeranjangActionPerformed
        int selectedRow = tblKeranjang.getSelectedRow();

        if (selectedRow != -1) {
            keranjangTableModel.removeRow(selectedRow);
            updateRowCountLabel();
        } else {
            JOptionPane.showMessageDialog(this, "Pilih Baris");
        }

    }//GEN-LAST:event_btn_hapusKeranjangActionPerformed

    private void btn_addKeranjangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addKeranjangActionPerformed
        String idDetail = txtDetail.getText();
        String idPeminjaman = txtID.getText();
        String idBuku = txtUnit.getText();

        if (idDetail.isEmpty() || idPeminjaman.isEmpty() || idBuku.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!");
            return;
        }

        if (keranjangTableModel.getRowCount() >= 3) {
            JOptionPane.showMessageDialog(this, "Melebihi batas maksimal peminjaman!");
            return;
        }

        if (!isIdBukuExists(idBuku)) {
            keranjangTableModel.addRow(new Object[]{idDetail, idPeminjaman, idBuku});
            clearKeranjang();

        } else {
            JOptionPane.showMessageDialog(this, "ID Buku Sudah ada");
        }
    }//GEN-LAST:event_btn_addKeranjangActionPerformed

    private void txtDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDetailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDetailActionPerformed

    private void txtJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJudulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJudulActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelAdd;
    private javax.swing.JPanel PanelMain;
    private javax.swing.JButton btnOtherJudul;
    private javax.swing.JButton btnOtherSantri;
    private javax.swing.JButton btnOtherUnit;
    private rojerusan.RSMaterialButtonRectangle btnPinjam;
    private keeptoo.KButton btn_addKeranjang;
    private keeptoo.KButton btn_hapusKeranjang;
    private com.raven.datechooser.DateChooser calendarKembali;
    private com.raven.datechooser.DateChooser calendarPinjam;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lbGambar;
    private javax.swing.JLabel lbTotalPinjam;
    private javax.swing.JTable tblKeranjang;
    private javax.swing.JTextField txtDetail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIDPenjaga;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtJudul;
    private javax.swing.JTextField txtNISN;
    private javax.swing.JTextField txtNamaJaga;
    private javax.swing.JTextField txtNamaSantri;
    private javax.swing.JTextField txtTglKembali;
    private javax.swing.JTextField txtTglPinjam;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables




    private void closeConnection(Connection conn) {
        try {
            if (conn != null && !conn.isClosed()) {
                conn.close();
            }
        } catch (SQLException closeEx) {
        
            closeEx.printStackTrace();
        }
    }

    private void clearForm() {
        txtID.setText("");
        txtDetail.setText("");
        txtIDPenjaga.setText("");
        txtNISN.setText("");
        txtISBN.setText("");
        txtJudul.setText("");
        txtNamaJaga.setText("");
        txtNamaSantri.setText("");
        txtUnit.setText("");
        keranjangTableModel.setRowCount(0);
       ImageIcon defaultImage = new ImageIcon("src/icon30/icons8_Book_120px_5.png");
lbGambar.setIcon(defaultImage);
        updateRowCountLabel();

    }

    private void clearKeranjang() {
        txtDetail.setText("");
        txtISBN.setText("");
        txtJudul.setText("");
        txtUnit.setText("");
       ImageIcon defaultImage = new ImageIcon("src/icon30/icons8_Book_120px_5.png");
lbGambar.setIcon(defaultImage);

    }

    private boolean isIdBukuExists(String idBuku) {
        for (int row = 0; row < keranjangTableModel.getRowCount(); row++) {
            String existingIdBuku = (String) keranjangTableModel.getValueAt(row, 2); 
            if (existingIdBuku.equals(idBuku)) {
                return true;
            }
        }
        return false;
    }

    private void KeranjangTableModel() {
        String[] keranjangColumns = {"ID Detail", "ID Peminjaman", "ID Buku"};
        Object[][] keranjangData = new Object[0][keranjangColumns.length];

        keranjangTableModel = new DefaultTableModelNonEditable(keranjangData, keranjangColumns);
        tblKeranjang.setModel(keranjangTableModel);

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        for (int i = 0; i < keranjangColumns.length; i++) {
            tblKeranjang.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        JTableHeader header = tblKeranjang.getTableHeader();
        header.setBackground(new Color(235, 227, 213));

        keranjangTableModel.addTableModelListener(e -> updateRowCountLabel());
        updateRowCountLabel();
    }

    private void updateRowCountLabel() {
        int rowCount = keranjangTableModel.getRowCount();
        lbTotalPinjam.setText(String.valueOf(rowCount));
    }

    class DefaultTableModelNonEditable extends DefaultTableModel {

        public DefaultTableModelNonEditable(Object[][] data, Object[] columnNames) {
            super(data, columnNames);
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    }

    private void updateImage() {
        String isbn = txtISBN.getText();
        setImage(lbGambar, isbn);
    }

    private void updateKodeDetail() {
        String idPeminjaman = txtID.getText();
        String idBuku = txtUnit.getText();

        if (!idPeminjaman.isEmpty() && !idBuku.isEmpty()) {
            String kodeDetail = idPeminjaman + "//" + idBuku;
            txtDetail.setText(kodeDetail);
        }
    }

    private String setIDPinjam() {
        String urutan = null;
        Date now = new Date();
        SimpleDateFormat noFormat = new SimpleDateFormat("yyMM");

        try (Connection conn = Koneksi.getConnection()) {
            String sql = "SELECT RIGHT(ID_PEMINJAMAN, 4) AS Nomor "
                    + "FROM PEMINJAMAN "
                    + "WHERE ID_PEMINJAMAN LIKE 'PNJAM" + noFormat.format(now) + "%' "
                    + "ORDER BY ID_PEMINJAMAN DESC "
                    + "LIMIT 1";

            try (PreparedStatement st = conn.prepareStatement(sql); ResultSet rs = st.executeQuery()) {

                if (rs.next()) {
                    int nomor = Integer.parseInt(rs.getString("Nomor")) + 1;
                    urutan = "PNJAM" + noFormat.format(now) + String.format("%04d", nomor);
                } else {
                    urutan = "PNJAM" + noFormat.format(now) + "001";
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(MenuEntry.class.getName()).log(Level.SEVERE, null, e);
        }
        return urutan;
    }

    private void setImage(JLabel lb_gambar, String id) {
        try (Connection conn = Koneksi.getConnection()) {
            String sql = "SELECT * FROM buku WHERE ISBN = '" + id + "'";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();

            if (rs.next()) {
                byte[] img = rs.getBytes("Gambar");
                if (img != null) {
                    ImageIcon imageIcon = new ImageIcon(new ImageIcon(img).getImage().
                            getScaledInstance(lb_gambar.getWidth(), lb_gambar.getHeight(), Image.SCALE_SMOOTH));
                    lb_gambar.setIcon(imageIcon);
                } else {
                    ImageIcon defaultIcon = new ImageIcon(getClass().getResource("Image/icons8_Book_120px_5.png"));
                    lb_gambar.setIcon(defaultIcon);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private int getCurrentLoansForNISN(Connection conn, String nisn) throws SQLException {
        int currentLoans = 0;

        String countLoansSql = "SELECT COUNT(*) AS LoanCount FROM PEMINJAMAN WHERE NISN = ? AND STATUS_PEMINJAMAN = 'Sedang Berlangsung'";
        try (PreparedStatement pstCountLoans = conn.prepareStatement(countLoansSql)) {
            pstCountLoans.setString(1, nisn);

            try (ResultSet rs = pstCountLoans.executeQuery()) {
                if (rs.next()) {
                    currentLoans = rs.getInt("LoanCount");
                }
            }
        }

        return currentLoans;
    }
   private boolean isValidDateOrder(String startDate, String endDate) {
    if (startDate.isEmpty() || endDate.isEmpty()) {
        return false;
    }

    try {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date datePinjam = sdf.parse(startDate);
        Date dateKembali = sdf.parse(endDate);

       
        return dateKembali.after(datePinjam) && !dateKembali.equals(datePinjam);
    } catch (ParseException e) {
        e.printStackTrace(); 
        return false;
    }
}

}
